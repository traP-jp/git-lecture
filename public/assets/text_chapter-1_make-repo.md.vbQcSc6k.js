import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.DPDPlp3K.js";const k=JSON.parse('{"title":"リポジトリの作成","description":"","frontmatter":{},"headers":[],"relativePath":"text/chapter-1/make-repo.md","filePath":"text/chapter-1/make-repo.md"}'),p={name:"text/chapter-1/make-repo.md"};function l(n,s,o,d,h,c){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="リポジトリの作成" tabindex="-1">リポジトリの作成 <a class="header-anchor" href="#リポジトリの作成" aria-label="Permalink to &quot;リポジトリの作成&quot;">​</a></h1><p>前編の目標は、Git と Gitea を組み合わせてクラウドストレージとして扱えるようになることです。この章では Gitea 上に Git リポジトリを作成し、手元の環境に複製（クローン）するところまでを行います。</p><h2 id="git-の役割" tabindex="-1">Git の役割 <a class="header-anchor" href="#git-の役割" aria-label="Permalink to &quot;Git の役割&quot;">​</a></h2><p>一言でいえば Git とは「<strong>ファイルのバージョン管理ツール</strong>」です。</p><p>今はとりあえず「複数人の開発における複雑なバージョン管理を手助けしてくれる」という程度のことを押さえていただければよいと思います。具体的に Git を使うことで何ができるのか、どういう部分が便利なのかは実際に手を動かしていくと段々と分かってくるはずです。</p><p>Git の操作に慣れるために、まず共同開発のことは忘れて個人的な用途に供してみましょう。最も簡単なところでは、Gitea と組み合わせて使うことで <strong>無料のクラウドストレージ</strong> 的な使い方ができます。Gitea についての説明は後に回して、まずは何ができるかを見てみましょう。</p><div class="info custom-block"><p class="custom-block-title">便利なクラウドストレージ</p><p>Mac ユーザーなら iCloud Drive に馴染みが深いでしょう。私（このページの著者）は自宅に Mac mini を置いて大学には MacBook を持っていくので、授業ノートは iCloud Drive に置いて両方から見られるようにしています。両方がインターネットに繋がっていれば、一方を更新すると他方にも反映されます。ノートのデータそのものは両方に保存されていて、オフラインでも同期せず閲覧・編集することはできます。</p><p>Microsoft が提供する OneDrive にも同様の機能がありますね。このようなクラウドストレージサービスとほぼ同じことが Git と Gitea によって実現できます。それを試してみましょう。</p></div><h2 id="リポジトリの作成-1" tabindex="-1">リポジトリの作成 <a class="header-anchor" href="#リポジトリの作成-1" aria-label="Permalink to &quot;リポジトリの作成&quot;">​</a></h2><p>Gitea のページから <a href="https://git.trap.jp/repo/create" target="_blank" rel="noreferrer">新しいリポジトリを作成</a> します。</p><ul><li>リポジトリ名を &quot;mydrive&quot; とする</li><li>リポジトリの初期設定にチェックを入れる</li></ul><p>以上のように設定して最下部の「リポジトリを作成」ボタンを押してください。</p><p><img src="https://md.trap.jp/uploads/upload_56c165c7bbf7b3894e1f42d953dad939.png" alt=""></p><p>リポジトリが作成されると以下のような画面に遷移します。</p><p><img src="https://md.trap.jp/uploads/upload_8998ee308cd12e4cec0984e09ce3c26c.png" alt=""></p><p>Code と書かれた青いボタンをクリックして、以下のように選択してください。HTTPS タブが開かれている場合は、その右隣の SSH タブを開いてください。</p><p><img src="https://md.trap.jp/uploads/upload_368aa3097d8929cec234113df297f47e.png" alt=""></p><p>四角が 2 つ重なったマークのボタンをクリックすることで、自動的に以下のような文字列がコピーされます。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ssh://git@git.trap.jp:2200/ユーザー名/mydrive.git</span></span></code></pre></div><p>この文字列は Web 上のリポジトリの場所を表す URL の一種なのですが、よく目にする <code>https://</code> から始まるものと異なり、データを SSH プロトコルというもので暗号化した上でやりとりするための形式になっています。</p><h2 id="リポジトリのクローン" tabindex="-1">リポジトリのクローン <a class="header-anchor" href="#リポジトリのクローン" aria-label="Permalink to &quot;リポジトリのクローン&quot;">​</a></h2><p>iCloud Drive や OneDrive では、特定の名前（たとえば &quot;iCloud Drive&quot;）がついた単一のディレクトリが与えられ、その中の好きな場所にファイルを置いておけるという感じでした。</p><p><img src="https://md.trap.jp/uploads/upload_463a69fe38aad51ec9417420d5723876.png" alt=""></p><p>Git + Gitea でクラウドストレージを作る場合、前に挙げたクラウドストレージと異なり、<strong>同期されるディレクトリはどこでもよい</strong>です。これから、Desktop ディレクトリと Downloads ディレクトリのそれぞれにクラウドストレージの同期ディレクトリを作ってみます。</p><p>では、実際にリポジトリをクローンします。ターミナルの画面で以下を実行してください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span></code></pre></div><p>記号 <code>~</code> は <a href="/text/chapter-1/review.html">用語の復習</a> の章で紹介した『ホームディレクトリ』を意味します。このコマンドによって、ターミナル上でホームディレクトリを開くことができます。</p><p>次に、以下を実行してホームディレクトリ内の Desktop ディレクトリに移ってください。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Desktop</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Windows ユーザー向けの補足</p><p>WSL2 環境を開いて講習会を受けている場合も、<a href="/text/chapter-1/review.html#windows-ユーザーの方へ">用語の復習</a> の章を追えていればホームディレクトリ内に Desktop というディレクトリが存在し、移れるはずです。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd: no such file or directory: Desktop</span></span></code></pre></div><p>もし上のように表示された場合、<a href="/text/chapter-1/review.html#windows-ユーザーの方へ">用語の復習</a> の章で示した手順を追えていない可能性があります。もう一度見直してみてください。分からないことがあれば TA を頼りましょう。</p></div><p>Desktop ディレクトリで以下を実行してください。なお、『先ほどの文字列』とは先ほど Gitea のページ上でコピーした <code>ssh://</code> から始まる文字列です。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 先ほどの文字列</span></span></code></pre></div><p>以上の手順によって、Desktop ディレクトリ内に新たに mydrive というディレクトリが作成されます。<code>ls</code>（ファイルやディレクトリの一覧表示）を実行して確認してみましょう。</p><div class="tip custom-block"><p class="custom-block-title">Finder やエクスプローラーで見てみる</p><p>Desktop ディレクトリにて以下のようなコマンドを実行することで、Mac なら Finder、Windows ならエクスプローラーでカレントディレクトリを開くことができます。記号 <code>.</code> はカレントディレクトリを表します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows では以下を実行する</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">explorer.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mac では以下を実行する</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>表示されたウィンドウには mydrive というディレクトリがあるはずです。開いてみると、README.md というテキストファイルが入っています。mydrive ディレクトリは GitHub という Web サービス上で先ほど作成した <strong>Git リポジトリ</strong> の写しになっています。</p></div><p>このあとの手順で必要になるので Downloads ディレクトリでもリポジトリのクローンを行ってください。<code>cd ~</code> によってホームディレクトリに戻ったら、あとは同じ手順です。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              　　　　　　　　 # 1. ホームディレクトリに移動</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Downloads</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      　　　　　　　　 # 2. Downloads ディレクトリに移動</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh://から始まる文字列</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 3. リポジトリをクローン</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                　　　　　　　　 # 4. mydrive というディレクトリの存在を確認</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">VSCode 上でリポジトリをクローン</p><p>VSCode のスタートページの中央左あたりに『Git リポジトリのクローン…』というボタンを見つけた方がいるかも知れません。ここをクリックしてリポジトリの URL を打ち込むことでデバイス上でディレクトリを選択するダイアログが開き、この方法でも Git リポジトリをクローンすることができます。</p><p><img src="https://md.trap.jp/uploads/upload_db6e511be6ee2d1b002a87fd7945e529.png" alt=""></p><p>今回はシェルコマンドの復習を兼ねてターミナルを扱ってクローン操作を行いましたが、VSCode 上でクローンする方法でももちろん問題ありません。ところで、この実習資料ではこの後一度も Git コマンドを使っていないので、もしクローンまで VSCode 上で済ませてしまうと、いよいよ Git コマンドの出番がどこにもなくなってしまう可能性は、無きにしも非ず。</p></div><p>再度、<code>cd</code> と <code>ls</code> を駆使して Desktop と Downloads のそれぞれに mydrive ディレクトリが存在することを確認してください。確認できたら次に進んでください。</p><hr><p><a href="https://q.trap.jp/channels/event/workshop/git/exercise" target="_blank" rel="noreferrer">#event/workshop/git/exercise</a> の『<strong>リポジトリの作成 まで</strong>』にスタンプをつけよう！</p>`,39)]))}const g=a(p,[["render",l]]);export{k as __pageData,g as default};
